<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2007 University of Oxford

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE howto PUBLIC "-//APACHE//DTD How-to V2.0//EN"
"http://forrest.apache.org/dtd/howto-v20.dtd">
<howto>
  <header>
    <title>How to develop Simal</title>

    <version>0.2</version>

    <abstract>This How-To describes how to set up your development envirnment
    for working with Simal. Since Simal uses many Eclipse plugins in components
    of the Simal project it makes most sense for you to work within the Eclipse
    environment (although this is not a requirement, it just makes your life
    easier). This how-to therefore focuses on configuring Eclipse for working
    on Simal.</abstract>

    <last-modified-content-date date="2007-04-05" />
  </header>

  <audience title="Intended Audience">
    <p>People wishing to participate in the development of Simal.</p>
  </audience>

  <purpose title="Purpose">
    <p>To identify the ideal development environment for working with Simal.</p>
  </purpose>

  <prerequisites title="Prerequisites">
    <p>Readers should</p>

    <ul>
      <li>Have at least a basic understanding of RDF, HTML and Java</li>
      <li>Have at least a basic understanding of Java development in Eclipse</li>
    </ul>

  </prerequisites>

  <steps title="Install and Configure Eclipse">
    <section>
      <title>Essential Plugins</title>
        
      <section>
        <title>Eclipse 3.3 + Web Tools Project 2.0</title>
        
        <p class="instruction">If you do not currently have eclipse installed we recomend that you 
        download and unpack the 
        <a href="http://download.eclipse.org/webtools/downloads/">Eclipse + WTP</a> All in one
        package.</p>
        
        <p class="instruction">If you already have eclipse then you will need to ensure that you also
        have the Web Standards Tools (WST) plugin installed (use the WTP 
        <a href="http://download.eclipse.org/webtools/updates/">update site</a>).</p> 
        
      </section>
      
      <section>
        <title>Subclipse</title>
          <p>We use a Subversion repository for our source code, therefore you need
          the subclipse plugins for working with the repository. Follow these simple 
          steps:</p>
          
          <p class="instruction">In the Eclipse menu select 
          <em>Help -> Software Updates -> Find and Install...</em></p>
          <p class="instruction">In the resulting dialog select <em>Search for new
          features to install</em> then click <em>next</em></p>
          <p class="instruction">Click <em>New Remote Site...</em></p>
          <p class="instruction">Enter a <em>Name</em> of Subclipse and
          and <em>URL</em> of http://subclipse.tigris.org/update_1.2.x and click <em>Finish</em></p>
          <p class="instruction">After a short delay whilst the update site is searched you will
          be able to expand the <em>subclipse</em> node and select <em>subclipse</em> for download.</p>
          <p class="instruction">[OPTIONAL] You may also choose to install the Mylar Integration
          plugin at this time. Mylar is not required, but is one of the optional plugins we
          will discuss later in this document.</p>
          <p class="instruction">Click <em>Next</em></p>
          <p class="instruction">Agree to the license terms (assuming you do agree that is)
          and click <em>Next</em></p>
          <p class="instruction">Review the plugins you have selected and click <em>Finish</em></p>
          <p class="instruction">After the plugins are downloaded click the <em>Install All</em> 
          button</p>
          <p class="instruction">Restart Eclipse when asked to do so</p>
        </section>
    </section>
    
    <section>
      <title>Maven</title>
      
      <p>We use Maven to build simal. You need to <a href="http://maven.apache.org/download.html">
      download and install</a> Maven 2 on your machine.</p> 
      
      <section>
        <title>q3e</title>
        
        <p>If you are using Eclipse we also recommend the q4e plugin that allows
        you to work with Maven projects within Eclipse. Q4E is available from the
        q4e <a href="http://q4e.googlecode.com/svn/trunk/updatesite/">update 
        site</a>.</p>
      </section>
    </section>
        
    <section>
      <title>Get Simal Sources</title>
      <p>The first thing you need to do is checkout the Simal source code. To do this
      use the <a href="/resources/simal.psf">simal.psf</a> team set.</p>
      
      <p class="instruction">Save the <a href="/resources/simal.psf">simal.psf</a>
      file in a convenient location</p>
       
      <p class="instruction">In Eclipse select <em>File -> Import</em></p>
      
      <p class="instruction">In the dialog select <em>Team -> Team Project Set</em>
      and click <em>Next</em></p>
      
      <p class="instruction">Select the <em>simal.psf</em> file you saved earlier and
      click <em>Finish</em></p>
      
      <p>After following these steps the source code for Simal will be checked out from
      version control, ready for you to start work.</p>
    </section>
    
    <section>
      <title>Configure Eclipse</title>
      
      <p>Now that you have the Simal sources you need to tell Eclipse to use the
      Maven defined dependencies:</p>
      
      <ol>
        <li>Right click on the <code>uk.ac.osswatch.simal.core</code> project and
        select Maven2 -> Enable Maven dependency management</li>
        
        <li>Right click on the <code>uk.ac.osswatch.simal.core</code> project and
        select Maven2 -> Locally install artifact</li>
        
        <li>Right click on the <code>uk.ac.osswatch.simal.web</code> project and
        select Maven2 -> Enable Maven dependency management</li>
      </ol>
      
      <warning>At the time of writing there are some dependencies for core that 
      are not available in public repositories. These need to be downloaded and 
      deployed to your local Maven repository. See src/site/developing.apt for
      more information.</warning>
      
    </section>
    
    <section>
      <title>Test Setup So Far</title>
      
      <p>Assuming everything has compiled OK we are now ready to run 
      some tests:</p>
      
      <ul>
        <li>right click on <code>uk.ac.osswatch.simal.core/src/test/java</code>
        and select <code>Run As -> JUnit Test</code></li>
        
        <li>Wait for the tests to run, you should get a green bar for all 
        tests</li>
        
        </ul>right click on <code>uk.ac.osswatch.simal.web/src/test/java</code>
        and select <code>Run As -> JUnit Test</code></li>
        
        <li>Wait for the tests to run, you should get a green bar for all 
        tests</li>
    </section>
    
    <section>
      <title>Start developing</title>
      
      <p>Assuming all tests past you are now ready to start developing. It
      is outside the scope of this document to go further, see the docs 
      linked in the "Developers" menu on the right.</p>
    </section>
      
    
    
    <section>
      <title>Optional Plugins</title>
      
      <section>
        <title>Mylyn Generic Issue Tracker Integration</title>
        <fixme author="rdg">Describe out use of the Mylyn generic issue tracker to integrate with 
        Google Code</fixme>
      </section>
    </section>
  </steps>


<!--
  <extension title="Presenting the field as read only data">
    <fixme author="rdg">Describe how to display the data element in a read
    only page as opposed to a form.</fixme>
  </extension>
 
  <faqs id="faqs">
    <title>Frequently Asked Questions</title>
    <faqsection id="faq-general">
      <title>General issues</title>
      <faq id="faq-difference">
        <question>What is the difference between a How-To and a
        tutorial?</question>

        <answer>
          <p>The goal of a How-To is to help the reader to accomplish a specific
          task with clear and consise instructions. While tutorials may contain
          How-To-like instructions and content, they also include additional
          background and conceptual content to help teach their readers higher
          order concepts along the way. How-Tos are concerned about filling an
          immediate, short-term need. Tutorials often provide long-term
          knowledge which can be applied across a range of needs.</p>
        </answer>
      </faq>
    </faqsection>

    <faqsection id="faq-style">
      <title>Style issues</title>
      <faq id="spelling">
        <question>What spelling convention should I follow?</question>

        <answer>
          <p>Use whatever spelling convention (American, British, etc.) that is
          most intuitive to you.</p>
        </answer>
      </faq>
    </faqsection>
  </faqs>

  <tips title="Tips">
    <section id="tip-dtd">
      <title>How-To dtd</title>

      <p>The document structure is likely to change at some time. Please note that
      this HOWTO page is likely to change as well.</p>
    </section>
  </tips>
  -->
 
  <references title="References">
        <ul>
      <li>An introduction to working with Deby in Eclipse <a
      href="http://www.eclipse.org/articles/Article-EclipseDbWebapps/article.html">Creating 
      Database Web Applications with Eclipse</a></li>
      
    </ul>
  </references>

</howto>
