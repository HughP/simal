#
# Copyright 2010 University of Oxford
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# 
#

## --------------------------------------------------------------
## This file is written in N3 / Turtle
## It is an RDF graph - order of RDF triples does not matter
## to the machine but it does help people who need to edit this file.

@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> .

@prefix module: <http://joseki.org/2003/06/module#> .
@prefix joseki: <http://joseki.org/2005/06/configuration#> .
@prefix ja:     <http://jena.hpl.hp.com/2005/11/Assembler#> .
@prefix tdb:     <http://jena.hpl.hp.com/2008/tdb#> .

## Note: web.xml must be in-step with this file.
## for each service, 

## Note: adding rdfs:label to blank nodes will cause Joseki 
## to print that in log messages.

## See also file:joseki-config-example.ttl


## --------------------------------------------------------------
## About this configuration

<> rdfs:label "Joseki Configuration File - TDB example" .

# Stripped down to support one service that exposes an
# TDB store as a SPARQL endpoint for query.

[]  rdf:type joseki:Server .

## --------------------------------------------------------------
## Services

## Services are the points that request are sent to.
## serviceRef that will be used to match requests to services,
## not some resource URI for the description.

## Note that the service reference and the routing of incoming
## requests by URI as defined by web.xml have to align.

# Service 1
# General purpose SPARQL processor, no dataset, expects the
# request to specify the dataset (either by parameters in the
# protocol request or in the query itself).

<#service1>
    rdf:type            joseki:Service ;
    rdfs:label          "SPARQL-TDB" ;
    joseki:serviceRef   "joseki/sparql" ;          # web.xml just route this name to Joseki
    joseki:dataset      <#dataset> ;
    joseki:processor    joseki:ProcessorSPARQL ;
    .

## --------------------------------------------------------------
## Datasets

## Initialize TDB.

[] ja:loadClass "com.hp.hpl.jena.tdb.TDB" .
tdb:DatasetTDB  rdfs:subClassOf  ja:RDFDataset .
tdb:GraphTDB    rdfs:subClassOf  ja:Model .

## ---- A whole dataset managed by TDB
<#dataset> rdf:type      tdb:DatasetTDB ;
## this works:
##    tdb:location "C:\\dev\\simal\\simal-webapp\\Simal_TDB" ;
    tdb:location "simal_TDB" ;
    .

## --------------------------------------------------------------
## Processors

joseki:ProcessorSPARQL
    rdfs:label "General SPARQL processor" ;
    rdf:type joseki:Processor ;
    module:implementation joseki:ImplSPARQL ;

    # Parameters - this processor processes FROM/FROM NAMED
    joseki:allowExplicitDataset       "true"^^xsd:boolean ;
    joseki:allowWebLoading            "true"^^xsd:boolean ;
    ## And has no locking policy (it loads data each time).
    ## The default is mutex (one request at a time)
    joseki:lockingPolicy                joseki:lockingPolicyNone ;
    .

joseki:ImplSPARQL
    rdf:type   joseki:ServiceImpl ;
    module:className
        <java:org.joseki.processors.SPARQL> .

# End:
