=How to develop Simal=

This How-To describes how to set up your development environment
for working with Simal. Since Simal uses many Eclipse plugins in components
of the Simal project it makes most sense for you to work within the Eclipse
environment (although this is not a requirement, it just makes your life
easier). This how-to therefore focuses on configuring Eclipse for working
on Simal.

==Intended Audience==

People wishing to participate in the development of Simal.

==Purpose==

To identify the ideal development environment for working with Simal.

==Prerequisites==

Readers should

 * Have at least a basic understanding of RDF, HTML and Java
 * Have at least a basic understanding of Java development in Eclipse

=Install and Configure Eclipse=

==Eclipse 3.5 + Web Tools Project 3.1==

If you do not currently have eclipse installed we recommend that you download and unpack the [http://www.eclipse.org/downloads/ Eclipse IDE for Java EE Developers] package.
 
If you already have eclipse then you will need to ensure that you also
have the Web Standards Tools (WST) plugin installed (use the WTP 
[http://download.eclipse.org/webtools/updates/ update site]). 
	  
==Codestyle and code formatting==

We have defined a custom Simal formatter and code templates for Eclipse.
To install these first download the following files:
 *  [http://simal.googlecode.com/svn/wiki/DevelopSimal.attach/simal_formatter.xml simal_formatter.xml]
 *  [http://simal.googlecode.com/svn/wiki/DevelopSimal.attach/simal_codetemplates.xml simal_codetemplates.xml]

To import the Formatter go to {{{ Window -> Preferences -> Java -> Code Style -> Formatter }}}.
Select {{{Import}}} and choose the simal_formatter.xml.

To import the code templates go to {{{ Window -> Preferences -> Java -> Code Style -> Code Templates }}}.
Select {{{Import}}} and choose the simal_codetemplates.xml.

==Recommended Plugins==

The following Eclipse plugins are useful when developing Simal.

===Subclipse===

We use a Subversion repository for our source code, therefore you need
an SVN plugin like Subclipse for working with the repository. You can install
the Subclipse plugin in Eclipse using their update site [http://subclipse.tigris.org/update_1.6.x http://subclipse.tigris.org/update_1.6.x] in the Eclipse Update Manager. If you are unfamiliar
with the Eclipse update manager you can find a good tutorial [http://www.vogella.de/articles/Eclipse/article.html#plugin_installation here]


===Maven===

We use Maven to build simal. If you want to use maven from the command line
you need to [http://maven.apache.org/download.html download and install] Maven 2 on your machine. However, if
you only intend to use maven from within Eclipse then you just
need the a Maven plugin described in the next section. 


===m2eclipse===

If you are using Eclipse we also recommend the m2eclipse plugin that allows
you to work with Maven projects within Eclipse. M2eclipse is available from the
m2eclipse [http://m2eclipse.sonatype.org/update/ update site] 
and is installed as described for the Subclipse plugin above.

===Wicket Bench===

[http://www.laughingpanda.org/mediawiki/index.php/Wicket_Bench Wicket Bench] is
a plugin that makes working with Wicket files easier. It can be installed
from the [http://www.laughingpanda.org/svn/wicket-bench/trunk/wicket-bench-site update site]
using the method described above.

===Get Simal Sources===
The first thing you need to do is checkout the Simal source code. To do this
use the [http://simal.googlecode.com/svn/wiki/DevelopSimal.attach/simal.psf simal.psf] team set.

 * Save the [http://simal.googlecode.com/svn/wiki/DevelopSimal.attach/simal.psf simal.psf]
file in a convenient location
 
 * In Eclipse select {{{File -> Import}}}

 * In the dialog select {{{Team -> Team Project Set}}} and click {{{Next}}}

 * Select the {{{simal.psf}}} file you saved earlier and click {{{Finish}}}

After following these steps the source code for Simal will be checked out from
version control, ready for you to start work.

After importing from SVN Maven will download all dependencies, this can take some
time depending on the speed of your network detection, but it is a one-off step.



===Test Setup So Far===

Assuming everything has compiled OK we are now ready to run 
some tests:


 * right click on {{{uk.ac.osswatch.simal.core/src/test/java}}} and select {{{Run As -> JUnit Test}}}

 * Wait for the tests to run, you should get a green bar for all tests

 * right click on {{{uk.ac.osswatch.simal.rest/src/test/java}}} and select {{{Run As -> JUnit Test}}}

 * Wait for the tests to run, you should get a green bar for all tests

 * right click on {{{uk.ac.osswatch.simal.web/src/test/java}}} and select {{{Run As -> JUnit Test}}}

 * Wait for the tests to run, you should get a green bar for all tests

==Optional Steps==

===Task Management===

These plugins are useful in tracking and managing tasks.


===Mylyn Generic Issue Tracker Integration===
TODO Describe use of the Mylyn generic issue tracker to [http://www.jroller.com/alexRuiz/entry/using_mylyn_with_google_code integrate] with Google Code




===Code Quality===
The plugins are used for managing code quality in Simal. They typically generate a number of reports indicating potential problems with code quality. It is good practice to run these reports on a periodic basis and to fix as many issues they highlight as is possible.

Many of these plugins integrated with our Maven builds and our [http://16degrees.com.au/hudson continuous integration] server. This allows us to keep an eye on the quality trends within our code.


===PMD===

[http://pmd.sourceforge.net/ PMD] scans Java source code and looks for potential problems like:


 * Possible bugs - empty try/catch/finally/switch statements
 * Dead code - unused local variables, parameters and private methods
 * Suboptimal code - wasteful String/StringBuffer usage
 * Overcomplicated expressions - unnecessary if statements, for loops that could be while loops
 * Duplicate code - copied/pasted code means copied/pasted bugs


Use the [http://pmd.sourceforge.net/eclipse/ PMD Eclipse update] site to install this plugin.  


===Find bugs===

[http://findbugs.sourceforge.net/ FindBugs] uses static analysis to look for bugs in Java code.

Use the [http://findbugs.cs.umd.edu/eclipse/ FindBugs Eclipse update] site to install this plugin.  






===Start developing===

Assuming all tests past you are now ready to start developing.
Further assistance is available in the relevant sections of the Simal
documentation.
