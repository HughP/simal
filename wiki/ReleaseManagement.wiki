#summary Steps to go through for a release
#labels Phase-QA

= Pre-Requisites =

Before a release can be made a number of requirements must be met.

 * Check all CodeAuditing reports are satisfactory (satisfactory means there are no warnings from the code audit tools)
 * All [http://code.google.com/p/simal/issues/list?can=7&q=&colspec=ID+Type+Status+Priority+Milestone+Summary&x=priority&y=milestone&cells=tiles unverified issues] have been verified by someone other than the owner of that issue
 * All source code has been formatted according to the projects coding standards
 * All documentation has been updated to reflect the new features in this release

= Code Freeze =

Send a mail to the developer and user lists stating that the project has entered a state of code freeze, that is no changes will be made other than preparation changes for the next release until the release is complete.

= Change src version numbers to reflect release candidate build =

We must first build a release candidate for testing. To do this we need to correctly set the version number. Usually this will mean changing the postfix from "-SNAPSHOT" to "-rc1", "-rc2", "rc3" etc.

 * in {{{pom.xml}}} change {{{<version>x.y.z[-POSTFIX]</version>}}}
 * in {{{src/main/resources/default.simal.properties}}} change {{{simal.version=x.y.z[-POSTFIX]}}}

In addition we need to change the dependency entries for other Simal modules in both the rest and webapp modules.

At this early stage we will release all Simal module simultaneously and therefore we need to change the {{{pom.xml}}} as described in each module (there is currently no {{{default.simal.properties}}} file in modules other than core)

= Build the Release Candidate Binaries =

For each of the modules build the binaries as follows:

{{{
cd uk.ac.osswatch.ac.uk.simal.core
mvn clean install
mvn assembly:assembly


cd uk.ac.osswatch.ac.uk.simal.rest
mvn clean install
mvn assembly:assembly

cd uk.ac.osswatch.ac.uk.simal.web
mvn clean assembly:assembly
}}}

Note that the process of building the binaries will run all automated tests against the code.

= Upload to Google Code =

Upload the binaries to the downloads section of Google Code, making them a featured download.

If this is a RC release then previous RC releases should be deleted (they use up the storage quota and can be rebuilt from SVN if people need to do so).

= Ensure Docs are Updated =

Rebuild and [PublishingSiteDocs publish the docs].

= Test =

Each of the binaries should be tested by as many people, on as many platforms as possible. Any reported tests failures must be resolved and new binaries produced for testing.

= Vote =

Assuming that no critical errors are discovered during the testing phase we can now proceed with getting approval for the release.

A vote on the release is called on the contributor mailing list.

Assuming that the vote passes we can proceed. If it does not pass the reason(s) for the negative votes must be addressed.

= Change src version numbers =

We must now build a release package. To do this we need to correctly set the version number. Usually this will mean changing the postfix from "-rc*" to "-ga"

 * in {{{pom.xml}}} change {{{<version>x.y.z[-POSTFIX]</version>}}}
 * in {{{src/main/resources/default.simal.properties}}} change {{{simal.version=x.y.z[-POSTFIX]}}}

At this early stage we will release all Simal module simultaneously and therefore we need to change the {{{pom.xml}}} as described in each module (there is currently no {{{default.simal.properties}}} file in modules other than core)

= Tag SVN =

SVN needs to be tagged with the release information, typically, this will look something like:

"simal_x_y_z"

= Set up a maintenance branch =

We need a maintenance branch in SVN in case any bugs are found in the release. Create a branch called:

"simal_x_y_z"

Where z is one increment higher than the previous release.

= Build the release binaries =

For each of the modules build the release binaries binaries using the same process as above.

= Upload to Google Code =

Upload to the downloads section of Google Code, making it a featured download.

Deprecate the previous release and remove the featured downloads lable from it (but do not delete the release).

= Change src version numbers =

We must now set up SVN for development of the next release. To do this we need to correctly set the version number. Usually this will mean incrementing the minor version number and changing the postfix from "-ga" to "-dev"

 * in {{{pom.xml}}} change {{{<version>x.y.z[-POSTFIX]</version>}}}
 * in {{{src/main/resources/default.simal.properties}}} change {{{simal.version=x.y.z[-POSTFIX]}}}

= Start the new development cycle =